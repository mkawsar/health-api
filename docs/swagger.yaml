basePath: /api/v1
definitions:
  requests.UserRequest:
    properties:
      name:
        type: string
    type: object
  utils.PaginatedResponse:
    properties:
      current_page:
        type: integer
      data: {}
      message:
        type: string
      per_page:
        type: integer
      success:
        type: boolean
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  utils.Response:
    properties:
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample API for managing users.
  title: Your API Title
  version: "1.0"
paths:
  /v1/user/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by the given ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - ApiKeyAuth: []
      summary: Get a user by ID
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update a user by the given ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User details
        in: body
        name: UserRequest
        required: true
        schema:
          $ref: '#/definitions/requests.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Response'
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - users
  /v1/user/list:
    get:
      consumes:
      - application/json
      description: Get a paginated list of users
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 10
        description: Items per page
        in: query
        name: limit
        type: integer
      - description: sorted by name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a list of users
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: 'Type "Bearer" followed by a space and the token. Example: "<token>"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
